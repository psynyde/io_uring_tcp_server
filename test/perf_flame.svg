<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>log_info (64,555 samples, 0.07%)</title><rect x="161.3" y="133" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="164.26" y="143.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (207,352 samples, 0.24%)</title><rect x="30.7" y="197" width="2.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="33.74" y="207.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (1,879,834 samples, 2.15%)</title><rect x="986.9" y="117" width="25.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="989.86" y="127.5" >_..</text>
</g>
<g >
<title>server (87,530,039 samples, 100.00%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >server</text>
</g>
<g >
<title>_itoa_word (1,134,722 samples, 1.30%)</title><rect x="651.0" y="149" width="15.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="653.97" y="159.5" ></text>
</g>
<g >
<title>malloc (276,755 samples, 0.32%)</title><rect x="780.9" y="181" width="3.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="783.94" y="191.5" ></text>
</g>
<g >
<title>__libc_start_call_main (87,280,041 samples, 99.71%)</title><rect x="13.4" y="213" width="1176.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="16.37" y="223.5" >__libc_start_call_main</text>
</g>
<g >
<title>_int_malloc (683,273 samples, 0.78%)</title><rect x="1063.0" y="149" width="9.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1065.97" y="159.5" ></text>
</g>
<g >
<title>__printf_buffer_to_file_switch (319,462 samples, 0.36%)</title><rect x="798.5" y="165" width="4.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="801.48" y="175.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (1,221,642 samples, 1.40%)</title><rect x="707.1" y="117" width="16.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="710.12" y="127.5" ></text>
</g>
<g >
<title>_IO_file_overflow@@GLIBC_2.2.5 (295,700 samples, 0.34%)</title><rect x="982.9" y="117" width="4.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="985.87" y="127.5" ></text>
</g>
<g >
<title>__strlen_avx2 (101,331 samples, 0.12%)</title><rect x="649.6" y="149" width="1.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="652.61" y="159.5" ></text>
</g>
<g >
<title>__printf_buffer_to_file_done (5,673,278 samples, 6.48%)</title><rect x="564.1" y="149" width="76.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="567.15" y="159.5" >__printf..</text>
</g>
<g >
<title>__vprintf_chk (728,278 samples, 0.83%)</title><rect x="287.7" y="181" width="9.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="290.74" y="191.5" ></text>
</g>
<g >
<title>_dl_relocate_object (124,999 samples, 0.14%)</title><rect x="11.7" y="181" width="1.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="14.69" y="191.5" ></text>
</g>
<g >
<title>__printf_buffer_to_file_init (399,545 samples, 0.46%)</title><rect x="674.1" y="149" width="5.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="677.11" y="159.5" ></text>
</g>
<g >
<title>_start (87,280,041 samples, 99.71%)</title><rect x="13.4" y="245" width="1176.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="16.37" y="255.5" >_start</text>
</g>
<g >
<title>_IO_do_write@@GLIBC_2.2.5 (90,975 samples, 0.10%)</title><rect x="981.6" y="117" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="984.64" y="127.5" ></text>
</g>
<g >
<title>__vfprintf_chk (888,157 samples, 1.01%)</title><rect x="499.5" y="165" width="12.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="502.53" y="175.5" ></text>
</g>
<g >
<title>__printf_buffer_flush_to_file (6,672,473 samples, 7.62%)</title><rect x="871.9" y="101" width="89.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="874.89" y="111.5" >__printf_b..</text>
</g>
<g >
<title>new_do_write (493,358 samples, 0.56%)</title><rect x="929.1" y="53" width="6.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="932.06" y="63.5" ></text>
</g>
<g >
<title>__restore_rt (64,555 samples, 0.07%)</title><rect x="161.3" y="165" width="0.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="164.26" y="175.5" ></text>
</g>
<g >
<title>_itoa_word (457,848 samples, 0.52%)</title><rect x="457.2" y="133" width="6.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="460.19" y="143.5" ></text>
</g>
<g >
<title>strlen@plt (87,994 samples, 0.10%)</title><rect x="1037.5" y="149" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1040.46" y="159.5" ></text>
</g>
<g >
<title>_io_uring_get_cqe (4,708,034 samples, 5.38%)</title><rect x="162.1" y="165" width="63.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="165.13" y="175.5" >_io_ur..</text>
</g>
<g >
<title>__printf_buffer_write (303,416 samples, 0.35%)</title><rect x="432.3" y="117" width="4.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="435.25" y="127.5" ></text>
</g>
<g >
<title>_IO_do_write@@GLIBC_2.2.5 (245,132 samples, 0.28%)</title><rect x="566.2" y="117" width="3.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="569.19" y="127.5" ></text>
</g>
<g >
<title>malloc (741,919 samples, 0.85%)</title><rect x="1175.0" y="165" width="10.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1178.04" y="175.5" ></text>
</g>
<g >
<title>__mempcpy_avx_unaligned_erms (235,101 samples, 0.27%)</title><rect x="756.8" y="101" width="3.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="759.85" y="111.5" ></text>
</g>
<g >
<title>_int_malloc (3,106,956 samples, 3.55%)</title><rect x="1088.9" y="149" width="41.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1091.86" y="159.5" >_in..</text>
</g>
<g >
<title>__printf_buffer_flush (7,112,332 samples, 8.13%)</title><rect x="866.0" y="117" width="95.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="868.96" y="127.5" >__printf_bu..</text>
</g>
<g >
<title>_io_uring_get_cqe (206,781 samples, 0.24%)</title><rect x="297.6" y="181" width="2.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="300.56" y="191.5" ></text>
</g>
<g >
<title>_IO_do_write@@GLIBC_2.2.5 (3,249,385 samples, 3.71%)</title><rect x="590.4" y="101" width="43.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="593.37" y="111.5" >_IO_..</text>
</g>
<g >
<title>_IO_file_write@@GLIBC_2.2.5 (151,750 samples, 0.17%)</title><rect x="993.4" y="85" width="2.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="996.40" y="95.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (66,044 samples, 0.08%)</title><rect x="377.4" y="149" width="0.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="380.41" y="159.5" ></text>
</g>
<g >
<title>__printf_buffer (296,030 samples, 0.34%)</title><rect x="668.9" y="149" width="4.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="671.87" y="159.5" ></text>
</g>
<g >
<title>inet_ntop4 (82,170 samples, 0.09%)</title><rect x="58.6" y="197" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="61.56" y="207.5" ></text>
</g>
<g >
<title>_IO_file_write@@GLIBC_2.2.5 (130,153 samples, 0.15%)</title><rect x="744.1" y="53" width="1.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="747.15" y="63.5" ></text>
</g>
<g >
<title>sigint_handler (64,555 samples, 0.07%)</title><rect x="161.3" y="149" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="164.26" y="159.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (1,314,471 samples, 1.50%)</title><rect x="729.9" y="101" width="17.7" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="732.86" y="111.5" ></text>
</g>
<g >
<title>_IO_file_overflow@@GLIBC_2.2.5 (1,391,548 samples, 1.59%)</title><rect x="935.7" y="69" width="18.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="938.71" y="79.5" ></text>
</g>
<g >
<title>_int_malloc (1,254,307 samples, 1.43%)</title><rect x="1157.2" y="149" width="16.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1160.20" y="159.5" ></text>
</g>
<g >
<title>__printf_buffer_write (7,619,426 samples, 8.70%)</title><rect x="860.7" y="133" width="102.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="863.66" y="143.5" >__printf_buf..</text>
</g>
<g >
<title>__printf_buffer_write (46,972 samples, 0.05%)</title><rect x="1016.8" y="149" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1019.76" y="159.5" ></text>
</g>
<g >
<title>alloc_perturb (73,180 samples, 0.08%)</title><rect x="1130.7" y="149" width="1.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1133.75" y="159.5" ></text>
</g>
<g >
<title>_itoa_word (512,714 samples, 0.59%)</title><rect x="1030.5" y="149" width="7.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1033.55" y="159.5" ></text>
</g>
<g >
<title>__printf_buffer_done (73,585 samples, 0.08%)</title><rect x="498.5" y="165" width="1.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="501.54" y="175.5" ></text>
</g>
<g >
<title>__strlen_avx2 (286,303 samples, 0.33%)</title><rect x="1026.7" y="149" width="3.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1029.69" y="159.5" ></text>
</g>
<g >
<title>__printf_buffer_flush_to_file (3,207,849 samples, 3.66%)</title><rect x="973.5" y="133" width="43.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="976.52" y="143.5" >__pr..</text>
</g>
<g >
<title>__printf_buffer_write (32,960 samples, 0.04%)</title><rect x="563.7" y="133" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="566.70" y="143.5" ></text>
</g>
<g >
<title>__mempcpy@plt (164,699 samples, 0.19%)</title><rect x="754.6" y="101" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="757.63" y="111.5" ></text>
</g>
<g >
<title>__printf_buffer_flush_to_file (57,875 samples, 0.07%)</title><rect x="966.8" y="149" width="0.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="969.76" y="159.5" ></text>
</g>
<g >
<title>__vfprintf_chk@plt (34,144 samples, 0.04%)</title><rect x="511.5" y="165" width="0.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="514.50" y="175.5" ></text>
</g>
<g >
<title>__sprintf_chk (6,041,520 samples, 6.90%)</title><rect x="381.9" y="165" width="81.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="384.92" y="175.5" >__sprintf..</text>
</g>
<g >
<title>__printf_buffer (3,240,785 samples, 3.70%)</title><rect x="520.5" y="149" width="43.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="523.46" y="159.5" >__pr..</text>
</g>
<g >
<title>__fcntl64_nocancel_adjusted (164,301 samples, 0.19%)</title><rect x="243.0" y="165" width="2.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="245.98" y="175.5" ></text>
</g>
<g >
<title>fprintf (64,555 samples, 0.07%)</title><rect x="161.3" y="117" width="0.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="164.26" y="127.5" ></text>
</g>
<g >
<title>_int_free_create_chunk (177,159 samples, 0.20%)</title><rect x="333.2" y="165" width="2.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="336.25" y="175.5" ></text>
</g>
<g >
<title>__printf_buffer_to_file_switch (113,595 samples, 0.13%)</title><rect x="961.8" y="117" width="1.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="964.85" y="127.5" ></text>
</g>
<g >
<title>_dl_catch_exception (124,999 samples, 0.14%)</title><rect x="10.0" y="165" width="1.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>_int_free (1,750,128 samples, 2.00%)</title><rect x="309.7" y="165" width="23.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="312.66" y="175.5" >_..</text>
</g>
<g >
<title>__sprintf_chk (107,896 samples, 0.12%)</title><rect x="279.4" y="181" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="282.38" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (149,704 samples, 0.17%)</title><rect x="1012.2" y="117" width="2.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1015.20" y="127.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (943,019 samples, 1.08%)</title><rect x="33.5" y="197" width="12.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="36.53" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (71,568 samples, 0.08%)</title><rect x="562.7" y="133" width="1.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="565.74" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_write (69,580 samples, 0.08%)</title><rect x="745.9" y="53" width="0.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="748.90" y="63.5" ></text>
</g>
<g >
<title>__GI___libc_write (665,290 samples, 0.76%)</title><rect x="1002.3" y="69" width="8.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1005.27" y="79.5" ></text>
</g>
<g >
<title>__strchrnul_ifunc@plt (92,706 samples, 0.11%)</title><rect x="648.4" y="149" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="651.36" y="159.5" ></text>
</g>
<g >
<title>openaux (124,999 samples, 0.14%)</title><rect x="10.0" y="149" width="1.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>inet_ntop4 (6,560,485 samples, 7.50%)</title><rect x="380.9" y="181" width="88.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="383.86" y="191.5" >inet_ntop4</text>
</g>
<g >
<title>_IO_do_write@@GLIBC_2.2.5 (543,928 samples, 0.62%)</title><rect x="739.5" y="85" width="7.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="742.51" y="95.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (54,393 samples, 0.06%)</title><rect x="379.5" y="165" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="382.54" y="175.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (403,695 samples, 0.46%)</title><rect x="239.8" y="181" width="5.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="242.75" y="191.5" ></text>
</g>
<g >
<title>__libc_calloc (2,360,678 samples, 2.70%)</title><rect x="1040.4" y="165" width="31.8" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1043.36" y="175.5" >__..</text>
</g>
<g >
<title>_int_free_create_chunk (1,134,009 samples, 1.30%)</title><rect x="362.1" y="149" width="15.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="365.13" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (33,026 samples, 0.04%)</title><rect x="639.1" y="117" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="642.10" y="127.5" ></text>
</g>
<g >
<title>printf (50,437 samples, 0.06%)</title><rect x="1185.0" y="197" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1188.05" y="207.5" ></text>
</g>
<g >
<title>systrim.constprop.0 (91,888 samples, 0.10%)</title><rect x="378.3" y="165" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="381.30" y="175.5" ></text>
</g>
<g >
<title>__printf_buffer_to_file_done (64,555 samples, 0.07%)</title><rect x="161.3" y="85" width="0.8" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="164.26" y="95.5" ></text>
</g>
<g >
<title>_IO_file_overflow@@GLIBC_2.2.5 (93,961 samples, 0.11%)</title><rect x="634.2" y="101" width="1.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="637.17" y="111.5" ></text>
</g>
<g >
<title>all (87,530,039 samples, 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (303,853 samples, 0.35%)</title><rect x="280.8" y="181" width="4.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="283.83" y="191.5" ></text>
</g>
<g >
<title>__mempcpy_avx_unaligned_erms (80,346 samples, 0.09%)</title><rect x="639.5" y="117" width="1.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="642.54" y="127.5" ></text>
</g>
<g >
<title>__printf_buffer_done (63,100 samples, 0.07%)</title><rect x="672.9" y="149" width="0.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="675.86" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (424,408 samples, 0.48%)</title><rect x="698.4" y="117" width="5.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="701.39" y="127.5" ></text>
</g>
<g >
<title>__vfprintf_internal (116,859 samples, 0.13%)</title><rect x="286.2" y="181" width="1.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="289.17" y="191.5" ></text>
</g>
<g >
<title>__mempcpy_avx_unaligned_erms (93,345 samples, 0.11%)</title><rect x="960.6" y="85" width="1.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="963.59" y="95.5" ></text>
</g>
<g >
<title>__printf_buffer (11,728,752 samples, 13.40%)</title><rect x="808.6" y="149" width="158.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="811.65" y="159.5" >__printf_buffer</text>
</g>
<g >
<title>__printf_buffer (1,056,595 samples, 1.21%)</title><rect x="691.4" y="133" width="14.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="694.41" y="143.5" ></text>
</g>
<g >
<title>__io_uring_get_cqe (414,103 samples, 0.47%)</title><rect x="25.2" y="197" width="5.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="28.15" y="207.5" ></text>
</g>
<g >
<title>__printf_buffer_to_file_switch (50,748 samples, 0.06%)</title><rect x="679.5" y="149" width="0.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="682.50" y="159.5" ></text>
</g>
<g >
<title>submit_send (113,393 samples, 0.13%)</title><rect x="1188.5" y="197" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1191.47" y="207.5" ></text>
</g>
<g >
<title>__libc_calloc (2,467,955 samples, 2.82%)</title><rect x="1140.8" y="165" width="33.3" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1143.84" y="175.5" >__..</text>
</g>
<g >
<title>__printf_buffer_to_file_done (3,651,188 samples, 4.17%)</title><rect x="967.5" y="149" width="49.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="970.54" y="159.5" >__pr..</text>
</g>
<g >
<title>_IO_file_write@@GLIBC_2.2.5 (604,863 samples, 0.69%)</title><rect x="591.3" y="85" width="8.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="594.28" y="95.5" ></text>
</g>
<g >
<title>__printf_buffer_done (111,806 samples, 0.13%)</title><rect x="793.3" y="165" width="1.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="796.28" y="175.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (124,999 samples, 0.14%)</title><rect x="10.0" y="181" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (240,152 samples, 0.27%)</title><rect x="1127.5" y="133" width="3.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1130.51" y="143.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (124,999 samples, 0.14%)</title><rect x="10.0" y="117" width="1.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>__printf_buffer (208,303 samples, 0.24%)</title><rect x="790.5" y="165" width="2.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="793.47" y="175.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (509,435 samples, 0.58%)</title><rect x="641.5" y="149" width="6.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="644.49" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (361,712 samples, 0.41%)</title><rect x="954.5" y="85" width="4.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="957.47" y="95.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (689,322 samples, 0.79%)</title><rect x="1017.4" y="149" width="9.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1020.40" y="159.5" ></text>
</g>
<g >
<title>_IO_file_write@@GLIBC_2.2.5 (344,195 samples, 0.39%)</title><rect x="739.5" y="69" width="4.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="742.51" y="79.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (106,874 samples, 0.12%)</title><rect x="376.0" y="133" width="1.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="378.97" y="143.5" ></text>
</g>
<g >
<title>memcpy@@GLIBC_2.14@plt (251,060 samples, 0.29%)</title><rect x="963.4" y="133" width="3.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="966.38" y="143.5" ></text>
</g>
<g >
<title>_int_malloc (69,449 samples, 0.08%)</title><rect x="1174.1" y="165" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1177.11" y="175.5" ></text>
</g>
<g >
<title>__printf_buffer_write (114,372 samples, 0.13%)</title><rect x="704.1" y="117" width="1.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="707.11" y="127.5" ></text>
</g>
<g >
<title>__printf_buffer_flush_to_file (5,673,278 samples, 6.48%)</title><rect x="564.1" y="133" width="76.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="567.15" y="143.5" >__printf..</text>
</g>
<g >
<title>_dl_map_object (124,999 samples, 0.14%)</title><rect x="10.0" y="133" width="1.7" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (5,817,480 samples, 6.65%)</title><rect x="876.0" y="85" width="78.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="879.04" y="95.5" >_IO_file_..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (62,929 samples, 0.07%)</title><rect x="245.2" y="181" width="0.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="248.19" y="191.5" ></text>
</g>
<g >
<title>new_do_write (71,141 samples, 0.08%)</title><rect x="1011.2" y="101" width="1.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1014.24" y="111.5" ></text>
</g>
<g >
<title>__printf_buffer_write (64,083 samples, 0.07%)</title><rect x="640.6" y="149" width="0.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="643.63" y="159.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (103,173 samples, 0.12%)</title><rect x="872.6" y="85" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="875.61" y="95.5" ></text>
</g>
<g >
<title>submit_recv (4,417,264 samples, 5.05%)</title><rect x="1072.2" y="181" width="59.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1075.18" y="191.5" >submit..</text>
</g>
<g >
<title>__vfprintf_internal (17,495,716 samples, 19.99%)</title><rect x="802.8" y="165" width="235.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="805.79" y="175.5" >__vfprintf_internal</text>
</g>
<g >
<title>log_info (450,299 samples, 0.51%)</title><rect x="59.7" y="197" width="6.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="62.67" y="207.5" ></text>
</g>
<g >
<title>__vfprintf_internal (7,473,761 samples, 8.54%)</title><rect x="680.2" y="149" width="100.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="683.18" y="159.5" >__vfprintf_i..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2,472,880 samples, 2.83%)</title><rect x="246.0" y="181" width="33.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="249.04" y="191.5" >__..</text>
</g>
<g >
<title>_IO_file_overflow@@GLIBC_2.2.5 (1,021,187 samples, 1.17%)</title><rect x="569.5" y="117" width="13.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="572.49" y="127.5" ></text>
</g>
<g >
<title>__printf_buffer (3,635,056 samples, 4.15%)</title><rect x="387.3" y="133" width="49.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="390.34" y="143.5" >__pr..</text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (327,647 samples, 0.37%)</title><rect x="969.1" y="133" width="4.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="972.10" y="143.5" ></text>
</g>
<g >
<title>log_info (21,968,844 samples, 25.10%)</title><rect x="484.8" y="181" width="296.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="487.77" y="191.5" >log_info</text>
</g>
<g >
<title>_IO_file_write@@GLIBC_2.2.5 (228,302 samples, 0.26%)</title><rect x="999.2" y="69" width="3.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1002.19" y="79.5" ></text>
</g>
<g >
<title>_IO_file_overflow@@GLIBC_2.2.5 (104,661 samples, 0.12%)</title><rect x="728.4" y="101" width="1.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="731.45" y="111.5" ></text>
</g>
<g >
<title>__printf_buffer_flush_to_file (2,702,243 samples, 3.09%)</title><rect x="723.6" y="117" width="36.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="726.59" y="127.5" >__p..</text>
</g>
<g >
<title>__vsprintf_internal (5,680,964 samples, 6.49%)</title><rect x="386.8" y="149" width="76.6" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="389.78" y="159.5" >__vsprin..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (313,646 samples, 0.36%)</title><rect x="428.0" y="117" width="4.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="431.02" y="127.5" ></text>
</g>
<g >
<title>__strchrnul_ifunc@plt (75,094 samples, 0.09%)</title><rect x="779.9" y="133" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="782.93" y="143.5" ></text>
</g>
<g >
<title>__libc_calloc (1,050,097 samples, 1.20%)</title><rect x="225.6" y="181" width="14.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="228.60" y="191.5" ></text>
</g>
<g >
<title>__fcntl64_nocancel_adjusted (341,390 samples, 0.39%)</title><rect x="156.7" y="181" width="4.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="159.65" y="191.5" ></text>
</g>
<g >
<title>new_do_write (1,171,906 samples, 1.34%)</title><rect x="995.4" y="85" width="15.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="998.44" y="95.5" ></text>
</g>
<g >
<title>new_do_write (199,733 samples, 0.23%)</title><rect x="744.1" y="69" width="2.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="747.15" y="79.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1,476,807 samples, 1.69%)</title><rect x="760.0" y="133" width="19.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="763.02" y="143.5" ></text>
</g>
<g >
<title>__printf_buffer_flush (79,635 samples, 0.09%)</title><rect x="859.6" y="133" width="1.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="862.59" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_write (1,674,104 samples, 1.91%)</title><rect x="611.6" y="69" width="22.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="614.60" y="79.5" >_..</text>
</g>
<g >
<title>__printf_buffer_to_file_done (30,130 samples, 0.03%)</title><rect x="673.7" y="149" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="676.71" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (64,555 samples, 0.07%)</title><rect x="161.3" y="53" width="0.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="164.26" y="63.5" ></text>
</g>
<g >
<title>__printf_buffer_flush_to_file (64,555 samples, 0.07%)</title><rect x="161.3" y="69" width="0.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="164.26" y="79.5" ></text>
</g>
<g >
<title>_IO_do_write@@GLIBC_2.2.5 (1,454,665 samples, 1.66%)</title><rect x="991.6" y="101" width="19.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="994.63" y="111.5" ></text>
</g>
<g >
<title>submit_accept (203,721 samples, 0.23%)</title><rect x="1185.7" y="197" width="2.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1188.72" y="207.5" ></text>
</g>
<g >
<title>inet_ntop (913,762 samples, 1.04%)</title><rect x="46.2" y="197" width="12.4" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="49.25" y="207.5" ></text>
</g>
<g >
<title>main (83,027,645 samples, 94.86%)</title><rect x="65.7" y="197" width="1119.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="68.74" y="207.5" >main</text>
</g>
<g >
<title>_IO_file_overflow@@GLIBC_2.2.5 (54,461 samples, 0.06%)</title><rect x="746.8" y="85" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="749.84" y="95.5" ></text>
</g>
<g >
<title>__io_uring_get_cqe (4,772,589 samples, 5.45%)</title><rect x="161.3" y="181" width="64.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="164.26" y="191.5" >__io_ur..</text>
</g>
<g >
<title>__printf_buffer_to_file_done (4,032,840 samples, 4.61%)</title><rect x="705.7" y="133" width="54.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="708.65" y="143.5" >__pri..</text>
</g>
<g >
<title>_IO_file_write@@GLIBC_2.2.5 (506,207 samples, 0.58%)</title><rect x="604.8" y="69" width="6.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="607.78" y="79.5" ></text>
</g>
<g >
<title>__printf_buffer (254,304 samples, 0.29%)</title><rect x="383.3" y="149" width="3.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="386.35" y="159.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (5,928,976 samples, 6.77%)</title><rect x="300.3" y="181" width="80.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="303.35" y="191.5" >cfree@GLI..</text>
</g>
<g >
<title>submit_accept (2,487,625 samples, 2.84%)</title><rect x="1038.6" y="181" width="33.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1041.65" y="191.5" >su..</text>
</g>
<g >
<title>__strchrnul_avx2 (1,314,297 samples, 1.50%)</title><rect x="439.5" y="133" width="17.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="442.47" y="143.5" ></text>
</g>
<g >
<title>io_uring_submit (1,148,035 samples, 1.31%)</title><rect x="469.3" y="181" width="15.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="472.30" y="191.5" ></text>
</g>
<g >
<title>__close (874,140 samples, 1.00%)</title><rect x="13.4" y="197" width="11.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="16.37" y="207.5" ></text>
</g>
<g >
<title>__vfprintf_chk (91,678 samples, 0.10%)</title><rect x="284.9" y="181" width="1.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="287.93" y="191.5" ></text>
</g>
<g >
<title>__vfprintf_internal (11,446,425 samples, 13.08%)</title><rect x="512.0" y="165" width="154.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="514.96" y="175.5" >__vfprintf_internal</text>
</g>
<g >
<title>printf (18,792,982 samples, 21.47%)</title><rect x="785.3" y="181" width="253.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="788.30" y="191.5" >printf</text>
</g>
<g >
<title>__mempcpy_avx_unaligned_erms (188,831 samples, 0.22%)</title><rect x="1014.2" y="117" width="2.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1017.22" y="127.5" ></text>
</g>
<g >
<title>_dl_start (249,998 samples, 0.29%)</title><rect x="10.0" y="229" width="3.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>_IO_file_write@@GLIBC_2.2.5 (184,122 samples, 0.21%)</title><rect x="931.1" y="37" width="2.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="934.15" y="47.5" ></text>
</g>
<g >
<title>submit_send (3,954,589 samples, 4.52%)</title><rect x="1131.7" y="181" width="53.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1134.73" y="191.5" >submi..</text>
</g>
<g >
<title>__printf_buffer_to_file_done (273,719 samples, 0.31%)</title><rect x="794.8" y="165" width="3.7" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="797.79" y="175.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (65,373 samples, 0.07%)</title><rect x="871.0" y="101" width="0.9" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="874.01" y="111.5" ></text>
</g>
<g >
<title>__libc_calloc (3,688,791 samples, 4.21%)</title><rect x="1082.0" y="165" width="49.7" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1085.00" y="175.5" >__lib..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1,080,518 samples, 1.23%)</title><rect x="845.0" y="133" width="14.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="848.02" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_write (154,215 samples, 0.18%)</title><rect x="933.6" y="37" width="2.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="936.63" y="47.5" ></text>
</g>
<g >
<title>memset@plt (46,584 samples, 0.05%)</title><rect x="784.7" y="181" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="787.67" y="191.5" ></text>
</g>
<g >
<title>__vfprintf_internal (64,555 samples, 0.07%)</title><rect x="161.3" y="101" width="0.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="164.26" y="111.5" ></text>
</g>
<g >
<title>__mempcpy@plt (92,169 samples, 0.11%)</title><rect x="959.3" y="85" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="962.34" y="95.5" ></text>
</g>
<g >
<title>__vsprintf_internal (440,215 samples, 0.50%)</title><rect x="463.4" y="165" width="5.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="466.36" y="175.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (2,308,060 samples, 2.64%)</title><rect x="897.9" y="69" width="31.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="900.94" y="79.5" >_I..</text>
</g>
<g >
<title>_IO_file_overflow@@GLIBC_2.2.5 (151,138 samples, 0.17%)</title><rect x="874.0" y="85" width="2.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="877.00" y="95.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (4,142,137 samples, 4.73%)</title><rect x="583.3" y="117" width="55.8" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="586.26" y="127.5" >_IO_f..</text>
</g>
<g >
<title>new_do_write (2,576,594 samples, 2.94%)</title><rect x="599.4" y="85" width="34.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="602.44" y="95.5" >ne..</text>
</g>
<g >
<title>_dl_start_user (249,998 samples, 0.29%)</title><rect x="10.0" y="245" width="3.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>inet_ntop (42,937 samples, 0.05%)</title><rect x="380.3" y="181" width="0.6" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="383.28" y="191.5" ></text>
</g>
<g >
<title>__printf_buffer_write (232,258 samples, 0.27%)</title><rect x="436.3" y="133" width="3.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="439.34" y="143.5" ></text>
</g>
<g >
<title>__libc_start_main@@GLIBC_2.34 (87,280,041 samples, 99.71%)</title><rect x="13.4" y="229" width="1176.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="16.37" y="239.5" >__libc_start_main@@GLIBC_2.34</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (523,030 samples, 0.60%)</title><rect x="747.6" y="101" width="7.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="750.58" y="111.5" ></text>
</g>
<g >
<title>_IO_do_write@@GLIBC_2.2.5 (493,358 samples, 0.56%)</title><rect x="929.1" y="69" width="6.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="932.06" y="79.5" ></text>
</g>
<g >
<title>dl_main (249,998 samples, 0.29%)</title><rect x="10.0" y="197" width="3.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>new_do_write (271,612 samples, 0.31%)</title><rect x="635.4" y="101" width="3.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="638.44" y="111.5" ></text>
</g>
<g >
<title>fprintf (8,505,726 samples, 9.72%)</title><rect x="666.3" y="165" width="114.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="669.27" y="175.5" >fprintf</text>
</g>
<g >
<title>_IO_file_overflow@@GLIBC_2.2.5 (1,135,344 samples, 1.30%)</title><rect x="913.8" y="53" width="15.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="916.75" y="63.5" ></text>
</g>
<g >
<title>_int_free_merge_chunk (3,164,944 samples, 3.62%)</title><rect x="335.6" y="165" width="42.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="338.64" y="175.5" >_int..</text>
</g>
<g >
<title>_dl_sysdep_start (249,998 samples, 0.29%)</title><rect x="10.0" y="213" width="3.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
</g>
</svg>
